Index: stickerlibrary/src/main/java/app/stickerlibrary/SaveStickers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- stickerlibrary/src/main/java/app/stickerlibrary/SaveStickers.java	(revision 67f94f5d6713362643e5e0c8450a80853c027ce3)
+++ stickerlibrary/src/main/java/app/stickerlibrary/SaveStickers.java	(date 1617270804214)
@@ -11,6 +11,7 @@
 
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
+import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
@@ -29,60 +30,58 @@
     public static final String EXTRA_STICKER_PACK_AUTHORITY = "sticker_pack_authority";
     public static final String EXTRA_STICKER_PACK_NAME = "sticker_pack_name";
     private static final String TAG = SaveStickers.class.getSimpleName();
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_save_stickers);
     }
 
-    public void startDownloadStickerImages(DataItem downloadStickerPack) {
+    public void startDownloadStickerImages(Context context, DataItem downloadStickerPack) {
         if (GlobalFun.isInternetConnected(this)) {
             showDialog(getString(R.string.labal_downloading_sticker));
-            new DownloadStickerPackImage(this, downloadStickerPack.getCatImg(), new OnImageDownloadTaskComplite() {
-                @Override
-                public void onFinish(String trayImageFilePath, File saveImgFolder) {
-                    try {
-                        if (!TextUtils.isEmpty(trayImageFilePath)) {
-                            File stickerPackTrayIconFile = new File(trayImageFilePath);
-                            StickerPack sp = new StickerPack(downloadStickerPack.getIdentifier(), downloadStickerPack.getName(), downloadStickerPack.getName(), Uri.fromFile(stickerPackTrayIconFile), "", "", "", "", SaveStickers.this, true);
-                            StickerBook.addStickerPackExisting(sp);
+            new DownloadStickerPackImage(context, downloadStickerPack.getCatImg(), (trayImageFilePath, saveImgFolder) -> {
+                try {
+                    if (!TextUtils.isEmpty(trayImageFilePath)) {
+                        File stickerPackTrayIconFile = new File(trayImageFilePath);
+                        StickerPack sp = new StickerPack(downloadStickerPack.getIdentifier(), downloadStickerPack.getName(), downloadStickerPack.getName(), Uri.fromFile(stickerPackTrayIconFile), "", "", "", "", context, true);
+                        StickerBook.addStickerPackExisting(sp);
 
-                            for (int i = 0; i < downloadStickerPack.getStickers().size(); i++) {
-                                int pos = i;
-                                //Sticker downloadSticker = downloadStickerPack.getSticker(pos);
-                                String downloadSticker = downloadStickerPack.getStickers().get(pos);
-                                new DownloadStickerPackImage(SaveStickers.this, downloadSticker, new OnImageDownloadTaskComplite() {
-                                    @Override
-                                    public void onFinish(String stickerImageFilePath, File saveImgFolder) {
-                                        try {
-                                            //show progress
-                                            int per = (100 * (pos + 1)) / (downloadStickerPack.getStickers().size() - 1);
-                                            updateProgressDialogMessage(getString(R.string.labal_downloading_sticker) + " : " + per + "%");
+                        for (int i = 0; i < downloadStickerPack.getStickers().size(); i++) {
+                            int pos = i;
+                            //Sticker downloadSticker = downloadStickerPack.getSticker(pos);
+                            String downloadSticker = downloadStickerPack.getStickers().get(pos);
+                            new DownloadStickerPackImage(context, downloadSticker, new OnImageDownloadTaskComplite() {
+                                @Override
+                                public void onFinish(String stickerImageFilePath, File saveImgFolder) {
+                                    try {
+                                        //show progress
+                                        int per = (100 * (pos + 1)) / (downloadStickerPack.getStickers().size() - 1);
+                                        updateProgressDialogMessage(getString(R.string.labal_downloading_sticker) + " : " + per + "%");
 
-                                            if (!TextUtils.isEmpty(stickerImageFilePath)) {
-                                                File stickerFile = new File(stickerImageFilePath);
-                                                sp.addSticker(Uri.fromFile(stickerFile), SaveStickers.this, pos);
-                                                if (pos == downloadStickerPack.getStickers().size() - 1) {
-                                                    GlobalFun.deleteRecursive(saveImgFolder);
-                                                    /*stickerPack = StickerBook.getStickerPackById(downloadStickerPack.identifier);
-                                                    stickerPreviewAdapter = new StickerPreviewAdapter(getLayoutInflater(), R.drawable.sticker_error, getResources().getDimensionPixelSize(R.dimen.sticker_pack_details_image_size), getResources().getDimensionPixelSize(R.dimen.sticker_pack_details_image_padding), stickerPack, clickListener);
-                                                    recyclerView.setAdapter(stickerPreviewAdapter);*/
-                                                    hideDialog();
-                                                    //downloadButton.setVisibility(View.GONE);
-                                                    addStickerPackToWhatsApp(downloadStickerPack);
-                                                }
-                                            }
-                                        } catch (Exception e) {
-                                            e.printStackTrace();
-                                        }
-                                    }
-                                }).execute();
-                            }
-                            invalidateOptionsMenu();
-                        }
-                    } catch (Exception e) {
-                        e.printStackTrace();
-                    }
+                                        if (!TextUtils.isEmpty(stickerImageFilePath)) {
+                                            File stickerFile = new File(stickerImageFilePath);
+                                            sp.addSticker(Uri.fromFile(stickerFile), context, pos);
+                                            if (pos == downloadStickerPack.getStickers().size() - 1) {
+                                                GlobalFun.deleteRecursive(saveImgFolder);
+                                                /*stickerPack = StickerBook.getStickerPackById(downloadStickerPack.identifier);
+                                                stickerPreviewAdapter = new StickerPreviewAdapter(getLayoutInflater(), R.drawable.sticker_error, getResources().getDimensionPixelSize(R.dimen.sticker_pack_details_image_size), getResources().getDimensionPixelSize(R.dimen.sticker_pack_details_image_padding), stickerPack, clickListener);
+                                                recyclerView.setAdapter(stickerPreviewAdapter);*/
+                                                hideDialog();
+                                                //downloadButton.setVisibility(View.GONE);
+                                                addStickerPackToWhatsApp(context, downloadStickerPack);
+                                            }
+                                        }
+                                    } catch (Exception e) {
+                                        e.printStackTrace();
+                                    }
+                                }
+                            }).execute();
+                        }
+                        invalidateOptionsMenu();
+                    }
+                } catch (Exception e) {
+                    e.printStackTrace();
                 }
             }).execute();
         } else {
@@ -90,7 +89,7 @@
         }
     }
 
-    private void addStickerPackToWhatsApp(DataItem sp) {
+    private void addStickerPackToWhatsApp(Context context, DataItem sp) {
         Intent intent = new Intent();
         intent.setAction("com.whatsapp.intent.action.ENABLE_STICKER_PACK");
         intent.putExtra(EXTRA_STICKER_PACK_ID, sp.getIdentifier());
@@ -99,7 +98,7 @@
         try {
             startActivityForResult(intent, 200);
         } catch (ActivityNotFoundException e) {
-            Toast.makeText(this, "R.string.error_adding_sticker_pack", Toast.LENGTH_LONG).show();
+            Toast.makeText(context, "R.string.error_adding_sticker_pack", Toast.LENGTH_LONG).show();
         }
     }
 
